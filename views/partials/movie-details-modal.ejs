<div class="modal-wrapper" id="movie-details-modal">
  <div class="modal">
    <a href="#" onclick="closeModal()" class="modal-close">+</a>
    <div class="modal-title">
      <h2>Movie Details</h2>
    </div>
    <div class="modal-body">
      <form
        method="post"
        action="/users"
        enctype="multipart/form-data"
        id="movie-details-form"
      >
      <img src="./images/logo.png" alt="">
        <input type="text" placeholder="Enter Movie Name" name="movie-name" />
        <p class="error name-error">This is error</p>

        <input type="number" placeholder="Enter Movie Duration (min)" name="duration" />
        <p class="error email-error">This is error</p>

        <input type="text" placeholder="Enter Actors Name" name="actors-name" />
        <p class="error mobile-error">This is error</p>

      </form>
    </div>
  </div>
</div>
<script>
  const movieDetailsModal = document.querySelector("#movie-details-modal");
  const movieDetailsForm = document.querySelector("#movie-details-form"); 

   // success toast
  const movieSuccessToast = Toastify({
    text: "User was added successfully! Reloading the list...",
    duration: 4000,
  });

  function closeModal() {
    movieDetailsModal.style.display = "none";
  }
  function openMovieDetailsModal() {
    movieDetailsModal.style.display = "block";
  }
    // form submit handler
  movieDetailsForm.onsubmit = async function (event) {
    event.preventDefault();

    // clear errors first
    const errorPlaceholders = document.querySelectorAll("p.error");
    for (let i = 0; i < errorPlaceholders.length; i++) {
      errorPlaceholders[i].style.display = "none";
    }

    const inputErrors = document.querySelectorAll("input.error");
    if (inputErrors.length > 0) {
      for (let j = 0; j < inputErrors.length; j++) {
        inputErrors[j].classList.remove("error");
      }
    }

    // prepare the form data
    const formData = new FormData(form);

    // send the request to server
    let response = await fetch("/admin", {
      method: "POST",
      body: formData,
    });

    // get response
    let result = await response.json();

    // handle error and response
    if (result.errors) {
      // errors
      Object.keys(result.errors).forEach((fieldName) => {
        // add error class to all inputs
        form[fieldName].classList.add("error");

        // set all error placeholders (p tag) textContent
        const errorPlaceholder = document.querySelector(`.${fieldName}-error`);
        errorPlaceholder.textContent = result.errors[fieldName].msg;

        // make all placeholders visible
        errorPlaceholder.style.display = "block";
      });
    } else {
      // success
      movieSuccessToast.showToast();
      closeModal();
      document.querySelector("p.error").style.display = "none";

      // reload the page after 1 second
      setTimeout(() => {
        location.reload();
      }, 1000);
    }
  };

  
</script>
